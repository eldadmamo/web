{"id":"src/index.ts","dependencies":[{"name":"C:\\Users\\eldad\\PhpstormProjects\\web\\tsconfig.json","includedInParent":true,"mtime":1698176935728},{"name":"C:\\Users\\eldad\\PhpstormProjects\\web\\package.json","includedInParent":true,"mtime":1698152143102},{"name":"./models/User","loc":{"line":3,"column":23,"index":100},"parent":"C:\\Users\\eldad\\PhpstormProjects\\web\\src\\index.ts","resolved":"C:\\Users\\eldad\\PhpstormProjects\\web\\src\\models\\User.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar User_1 = require(\"./models/User\");\nvar collection = User_1.User.buildUserCollection();\ncollection.on('change', function () {\n  console.log(collection);\n});\ncollection.fetch();\n// class Person {\n//     constructor(public firstName: string, public lastName: string) {\n//     }\n//         fullName(): string {\n//             return `${this.firstName} ${this.lastName}`\n//     }\n// }\n//\n// const person = new Person('firstname','lastName' )\n// console.log(person.fullName());\n//\n// const on = user.on;\n//\n// on('change', () => {\n//\n// })\n//\n// console.log(user.get('name'));\n// user.trigger('change');\n//\n// user.set({name: 'Eldad Update'})\n// const colors = {\n//     color: 'red',\n//     printColor() {\n//         console.log(this.color);\n//     }\n// }\n//\n// const printColor = colors.printColor();\n//\n// printColor();"},"sourceMaps":{"js":{"mappings":[{"source":"src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":13}},{"source":"src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":20}},{"source":"src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":21}},{"source":"src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":36}},{"source":"src/index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":37}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":7,"column":4}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":7,"column":14}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":7,"column":17}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":7,"column":23}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":7,"column":24}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":24},"generated":{"line":7,"column":28}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":25},"generated":{"line":7,"column":29}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":44},"generated":{"line":7,"column":48}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":44},"generated":{"line":7,"column":49}},{"source":"src/index.ts","name":null,"original":{"line":5,"column":46},"generated":{"line":7,"column":50}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":10},"generated":{"line":8,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":8,"column":11}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":8,"column":13}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":8,"column":14}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":22},"generated":{"line":8,"column":22}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":24},"generated":{"line":8,"column":24}},{"source":"src/index.ts","name":null,"original":{"line":7,"column":29},"generated":{"line":8,"column":36}},{"source":"src/index.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":9,"column":2}},{"source":"src/index.ts","name":null,"original":{"line":8,"column":11},"generated":{"line":9,"column":9}},{"source":"src/index.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":9,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":8,"column":15},"generated":{"line":9,"column":13}},{"source":"src/index.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":9,"column":14}},{"source":"src/index.ts","name":null,"original":{"line":8,"column":26},"generated":{"line":9,"column":24}},{"source":"src/index.ts","name":null,"original":{"line":8,"column":27},"generated":{"line":9,"column":25}},{"source":"src/index.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":10,"column":1}},{"source":"src/index.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":10,"column":2}},{"source":"src/index.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":11,"column":10},"generated":{"line":11,"column":10}},{"source":"src/index.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":11,"column":11}},{"source":"src/index.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":11,"column":16}},{"source":"src/index.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":11,"column":17}},{"source":"src/index.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":11,"column":18}},{"source":"src/index.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":12,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":13,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":14,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":15,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":16,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":17,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":18,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":19,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":20,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":21,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":22,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":23,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":24,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":25,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":26,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":27,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":28,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":29,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":30,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":31,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":32,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":37,"column":0},"generated":{"line":33,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":34,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":35,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":36,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":37,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":38,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":39,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":40,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":41,"column":0}},{"source":"src/index.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":42,"column":0}}],"sources":{"src/index.ts":"import {Collection} from \"./models/Collection\";\r\nimport {User, UsersProps} from \"./models/User\";\r\n\r\n\r\nconst collection  = User.buildUserCollection();\r\n\r\ncollection.on('change', () => {\r\n    console.log(collection);\r\n})\r\n\r\ncollection.fetch();\r\n\r\n// class Person {\r\n//     constructor(public firstName: string, public lastName: string) {\r\n//     }\r\n//         fullName(): string {\r\n//             return `${this.firstName} ${this.lastName}`\r\n//     }\r\n// }\r\n//\r\n// const person = new Person('firstname','lastName' )\r\n// console.log(person.fullName());\r\n//\r\n// const on = user.on;\r\n//\r\n// on('change', () => {\r\n//\r\n// })\r\n//\r\n// console.log(user.get('name'));\r\n\r\n\r\n// user.trigger('change');\r\n//\r\n// user.set({name: 'Eldad Update'})\r\n\r\n// const colors = {\r\n//     color: 'red',\r\n//     printColor() {\r\n//         console.log(this.color);\r\n//     }\r\n// }\r\n//\r\n// const printColor = colors.printColor();\r\n//\r\n// printColor();\r\n"},"lineCount":null}},"error":null,"hash":"49a92e299803ab15be529871ae99bda0","cacheData":{"env":{}}}